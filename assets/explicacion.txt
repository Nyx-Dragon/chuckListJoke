ğŸ“Œ Paso 1: Obtener un chiste de la API de Chuck Norris
javascript
Copiar
Editar
function fetchJoke() {
    fetch('https://api.chucknorris.io/jokes/random', {})
    .then(function(respuesta) {
        return respuesta.json();
    })
    .then(function(datos) {
        console.log(datos);
        // Crear el chiste y mostrarlo en la pÃ¡gina
    });
}
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Usamos fetch() para hacer una solicitud a la API de Chuck Norris.
Cuando obtenemos la respuesta, la convertimos a formato JSON con .then(res => res.json()).
En el segundo .then(), trabajamos con los datos obtenidos, que contienen el chiste.
ğŸ“Œ Paso 2: Mostrar el chiste en la pÃ¡gina
javascript
Copiar
Editar
const valor = document.createElement("li");
valor.innerHTML = datos.value;
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Creamos un nuevo elemento li (lista) donde pondremos el chiste.
Asignamos el contenido del chiste obtenido (datos.value) a ese li.
ğŸ“Œ Paso 3: Crear un botÃ³n "Eliminar"
javascript
Copiar
Editar
const btnborrar = document.createElement("button");
btnborrar.innerHTML = "Eliminar";
btnborrar.style.background = "red";
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Creamos un botÃ³n con el texto "Eliminar" y lo estilizamos con un fondo rojo.
ğŸ“Œ Paso 4: FunciÃ³n para eliminar el chiste
javascript
Copiar
Editar
function eliminarHandler() {
    eliminarChiste(valor, datos.value);
}
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Creamos una funciÃ³n eliminarHandler() que llama a eliminarChiste(), la cual eliminarÃ¡ el chiste tanto de la pÃ¡gina como de localStorage.
ğŸ“Œ Paso 5: AÃ±adir el botÃ³n de "Eliminar" y el chiste a la lista
javascript
Copiar
Editar
const container = document.getElementById("jokeList");
container.appendChild(valor);
valor.appendChild(btnborrar);
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

AÃ±adimos el li con el chiste y el botÃ³n "Eliminar" a un contenedor (jokeList) en la pÃ¡gina.
ğŸ“Œ Paso 6: Almacenar el chiste en localStorage
javascript
Copiar
Editar
function almacenarChiste(chiste) {
    let jokes = JSON.parse(localStorage.getItem("chistes")) || [];
    jokes.push(chiste);
    localStorage.setItem("chistes", JSON.stringify(jokes));
}
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Primero, obtenemos los chistes guardados en localStorage (si los hay) y los almacenamos en un array.
Luego, aÃ±adimos el nuevo chiste al array y lo volvemos a guardar en localStorage.
ğŸ“Œ Paso 7: Eliminar un chiste de la pÃ¡gina y localStorage
javascript
Copiar
Editar
function eliminarChiste(element, chiste) {
    element.remove();
    let jokes = JSON.parse(localStorage.getItem("chistes")) || [];
    jokes = jokes.filter(function(joke) {
        return joke !== chiste;
    });
    localStorage.setItem("chistes", JSON.stringify(jokes));
}
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Eliminamos el chiste de la pÃ¡gina con element.remove().
Luego, filtramos el array de chistes guardados en localStorage para eliminar el chiste que ya fue borrado y lo actualizamos.
ğŸ“Œ Paso 8: Mostrar los chistes almacenados en localStorage al cargar la pÃ¡gina
javascript
Copiar
Editar
function mostrarChistes() {
    let jokes = JSON.parse(localStorage.getItem("chistes")) || [];
    jokes.forEach(function(chiste) {
        const valor = document.createElement("li");
        valor.innerHTML = chiste;
        const btnborrar = document.createElement("button");
        btnborrar.innerHTML = "Eliminar";
        btnborrar.style.background = "red";
        btnborrar.addEventListener("click", function() {
            eliminarChiste(valor, chiste);
        });
        const container = document.getElementById("jokeList");
        container.appendChild(valor);
        valor.appendChild(btnborrar);
    });
}
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Cuando la pÃ¡gina se carga, obtenemos los chistes almacenados en localStorage.
Luego, por cada chiste, creamos un li con el chiste y un botÃ³n "Eliminar" asociado, que permite borrar ese chiste.
ğŸ“Œ Paso 9: Conectar el botÃ³n para obtener chistes
javascript
Copiar
Editar
boton.addEventListener("click", fetchJoke);
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Cuando el usuario hace clic en el botÃ³n "Obtener chiste", se ejecuta la funciÃ³n fetchJoke(), que obtiene un nuevo chiste de la API.
ğŸ“Œ Paso 10: Mostrar los chistes almacenados al cargar la pÃ¡gina
javascript
Copiar
Editar
document.addEventListener("DOMContentLoaded", mostrarChistes);
ğŸ”¹ Â¿QuÃ© ocurre aquÃ­?

Cuando la pÃ¡gina se carga (DOMContentLoaded), se ejecuta la funciÃ³n mostrarChistes() para mostrar todos los chistes almacenados en localStorage.
